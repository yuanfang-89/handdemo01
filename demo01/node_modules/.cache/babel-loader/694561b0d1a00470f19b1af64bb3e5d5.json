{"ast":null,"code":"import { CHANGE_INPUT, ADD_ITEM, DELETE_ITEM, GET_LIST, UPDATE_LIST, SAVE_LIST, CHANGE_NAME, CHANGE_ID, CHANGE_DEP, CANCEL, SEARCH } from './actionTypes';\nconst defaultState = {\n  inputValue: '',\n  name: '',\n  id: '',\n  dep: '',\n  list: [],\n  searchList: []\n};\n\nconst states = (state = defaultState, action) => {\n  console.log(state, action); //Reducer里只能接收state，不能改变state\n\n  if (action.type === CHANGE_INPUT) {\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.inputValue = action.value;\n    return newState;\n  } else if (action.type === ADD_ITEM) {\n    let newState = JSON.parse(JSON.stringify(state));\n    let key = newState.list.length + 1;\n    newState.searchList.push({\n      key: key,\n      name: '',\n      id: '',\n      department: '',\n      isSaved: false\n    });\n    newState.list.push({\n      key: key,\n      name: '',\n      id: '',\n      department: '',\n      isSaved: false\n    });\n    return newState;\n  } else if (action.type === DELETE_ITEM) {\n    let newState = JSON.parse(JSON.stringify(state));\n    let key = newState.searchList[action.index].key;\n    newState.searchList.splice(action.index, 1);\n\n    for (let i = 0; i < newState.list.length; i++) {\n      if (newState.list[i].key === key) {\n        newState.list.splice(i, 1);\n        break;\n      }\n    }\n\n    return newState;\n  } else if (action.type === GET_LIST) {\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.list = action.data.data.list;\n    newState.searchList = action.data.data.list;\n    return newState;\n  } else if (action.type === UPDATE_LIST) {\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.searchList[action.index].isSaved = false;\n    newState.name = newState.searchList[action.index].name;\n    newState.id = newState.searchList[action.index].id;\n    newState.dep = newState.searchList[action.index].department;\n    return newState;\n  } else if (action.type === CHANGE_NAME) {\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.name = action.value;\n    return newState;\n  } else if (action.type === CHANGE_ID) {\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.id = action.value;\n    return newState;\n  } else if (action.type === CHANGE_DEP) {\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.dep = action.value;\n    return newState;\n  } else if (action.type === SAVE_LIST) {\n    let newState = JSON.parse(JSON.stringify(state));\n\n    if (newState.name === '' && newState.id === '' && newState.dep === '') {}\n\n    let key = newState.searchList[action.index].key;\n    newState.searchList[action.index].name = newState.name;\n    newState.searchList[action.index].id = newState.id;\n    newState.searchList[action.index].department = newState.dep;\n    newState.searchList[action.index].isSaved = true;\n\n    for (let i = 0; i < newState.list.length; i++) {\n      if (newState.list[i].key === key) {\n        newState.list[i] = newState.searchList[action.index];\n        break;\n      }\n    }\n\n    newState.name = '';\n    newState.id = '';\n    newState.dep = '';\n    return newState;\n  } else if (action.type === CANCEL) {\n    let newState = JSON.parse(JSON.stringify(state));\n    newState.searchList[action.index].isSaved = true;\n    newState.list[action.index].isSaved = true;\n    return newState;\n  } else if (action.type === SEARCH) {\n    let newState = JSON.parse(JSON.stringify(state));\n    let search = newState.inputValue;\n    let reg = new RegExp(search);\n    newState.searchList = newState.list.filter(item => {\n      return reg.test(item.name);\n    });\n    return newState;\n  }\n\n  return state;\n};\n\nexport default states;","map":{"version":3,"sources":["C:/Users/Ric/Desktop/demo/src/store/reducer.js"],"names":["CHANGE_INPUT","ADD_ITEM","DELETE_ITEM","GET_LIST","UPDATE_LIST","SAVE_LIST","CHANGE_NAME","CHANGE_ID","CHANGE_DEP","CANCEL","SEARCH","defaultState","inputValue","name","id","dep","list","searchList","states","state","action","console","log","type","newState","JSON","parse","stringify","value","key","length","push","department","isSaved","index","splice","i","data","search","reg","RegExp","filter","item","test"],"mappings":"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","sourcesContent":["import { CHANGE_INPUT, ADD_ITEM, DELETE_ITEM, GET_LIST, UPDATE_LIST, SAVE_LIST, \r\n    CHANGE_NAME, CHANGE_ID, CHANGE_DEP, CANCEL, SEARCH } from './actionTypes'\r\nconst defaultState = {\r\n    inputValue: '',\r\n    name: '',\r\n    id: '',\r\n    dep: '',\r\n    list: [\r\n\r\n    ],\r\n    searchList:[\r\n\r\n    ]\r\n}\r\n\r\nconst states = (state = defaultState, action) => {\r\n\r\n    console.log(state, action)\r\n\r\n    //Reducer里只能接收state，不能改变state\r\n    if (action.type === CHANGE_INPUT) {\r\n        let newState = JSON.parse(JSON.stringify(state))\r\n        newState.inputValue = action.value\r\n        return newState\r\n    }else if (action.type === ADD_ITEM) {\r\n        let newState = JSON.parse(JSON.stringify(state))\r\n\r\n        let key = newState.list.length+1\r\n        newState.searchList.push({key:key,name:'',id:'',department:'',isSaved:false})\r\n        newState.list.push({key:key,name:'',id:'',department:'',isSaved:false})\r\n        \r\n        return newState\r\n    }else if (action.type === DELETE_ITEM) {\r\n        let newState = JSON.parse(JSON.stringify(state))\r\n\r\n        let key = newState.searchList[action.index].key\r\n        newState.searchList.splice(action.index, 1)\r\n        for(let i=0;i<newState.list.length;i++){\r\n            if(newState.list[i].key === key){\r\n                newState.list.splice(i,1)\r\n                break;\r\n            }\r\n        }\r\n        \r\n        \r\n        return newState\r\n    }else if (action.type === GET_LIST) {\r\n        let newState = JSON.parse(JSON.stringify(state))\r\n        newState.list = action.data.data.list\r\n        newState.searchList = action.data.data.list\r\n        return newState\r\n    }else if (action.type === UPDATE_LIST) {\r\n        let newState = JSON.parse(JSON.stringify(state))\r\n        newState.searchList[action.index].isSaved = false\r\n\r\n        newState.name = newState.searchList[action.index].name\r\n        newState.id = newState.searchList[action.index].id\r\n        newState.dep = newState.searchList[action.index].department\r\n\r\n        return newState\r\n    }else if(action.type === CHANGE_NAME){\r\n        let newState = JSON.parse(JSON.stringify(state))\r\n        newState.name = action.value\r\n        return newState\r\n    }else if(action.type === CHANGE_ID){\r\n        let newState = JSON.parse(JSON.stringify(state))\r\n        newState.id = action.value\r\n        return newState\r\n    }else if(action.type === CHANGE_DEP){\r\n        let newState = JSON.parse(JSON.stringify(state))\r\n        newState.dep = action.value\r\n        return newState\r\n    }else if(action.type === SAVE_LIST){\r\n        let newState = JSON.parse(JSON.stringify(state))\r\n\r\n        if(newState.name===''&&newState.id===''&&newState.dep===''){\r\n            \r\n        }\r\n\r\n        let key = newState.searchList[action.index].key\r\n        newState.searchList[action.index].name = newState.name\r\n        newState.searchList[action.index].id = newState.id\r\n        newState.searchList[action.index].department = newState.dep\r\n        newState.searchList[action.index].isSaved = true\r\n\r\n        for(let i=0;i<newState.list.length;i++){\r\n            if(newState.list[i].key === key){\r\n                newState.list[i] = newState.searchList[action.index]\r\n                break;\r\n            }\r\n        }\r\n\r\n        newState.name = ''\r\n        newState.id = ''\r\n        newState.dep = ''\r\n\r\n        return newState\r\n    }else if(action.type === CANCEL){\r\n        let newState = JSON.parse(JSON.stringify(state))\r\n        newState.searchList[action.index].isSaved = true\r\n        newState.list[action.index].isSaved = true\r\n        return newState\r\n    }else if(action.type === SEARCH){\r\n        let newState = JSON.parse(JSON.stringify(state))\r\n        let search = newState.inputValue\r\n        let reg = new RegExp(search)\r\n        newState.searchList = newState.list.filter((item)=>{ return reg.test(item.name)})\r\n        return newState\r\n    }\r\n\r\n    return state\r\n}\r\nexport default states"]},"metadata":{},"sourceType":"module"}